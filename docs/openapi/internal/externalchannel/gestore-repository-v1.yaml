openapi: 3.0.3
info:
  title: Gestore repository
  description: Api esposte dal gestore repository per la configurazione dei client e per la gestione delle richieste
  version: v1.0.0

servers:
  - url: http://localhost:8080
    description: Generated server url

tags:
  - name: ConfigurazioneClient
    description: Operazioni per la configurazione dei client
  - name: GestoreRequest
    description: Operazione per la gestione delle richieste

paths:
  /external-channel/gestoreRepository/clients/{xPagopaExtchCxId}:
    parameters:
      - name: xPagopaExtchCxId
        in: path
        required: true
        allowEmptyValue: false
        schema:
          type: string
    get:
      tags:
        - ConfigurazioneClient
      operationId: getClient
      responses:
        200:
          $ref: '#/components/responses/clientResponseOk'
        404:
          $ref: '#/components/responses/missingRequestedItem'
    put:
      tags:
        - ConfigurazioneClient
      operationId: updateClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../../external/api-internal-v1.yaml#/components/schemas/ClientConfigurationDto'
        required: true
      responses:
        200:
          $ref: '#/components/responses/clientResponseOk'
        404:
          $ref: '#/components/responses/missingRequestedItem'
    delete:
      tags:
        - ConfigurazioneClient
      operationId: deleteClient
      responses:
        200:
          description: OK
        404:
          $ref: '#/components/responses/missingRequestedItem'

  /external-channel/gestoreRepository/clients:
    post:
      tags:
        - ConfigurazioneClient
      operationId: insertClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../../external/api-internal-v1.yaml#/components/schemas/ClientConfigurationDto'
        required: true
      responses:
        200:
          $ref: '#/components/responses/clientResponseOk'
        409:
          $ref: '#/components/responses/requestedItemAlreadyExist'

  /external-channel/gestoreRepository/requests/{requestIdx}:
    parameters:
      - name: x-pagopa-extch-cx-id
        in: header
        required: true
        schema:
          type: string
      - name: requestIdx
        in: path
        required: true
        schema:
          type: string
          minLength: 5
          maxLength: 100
    get:
      tags:
        - GestoreRequest
      operationId: getRequest
      responses:
        200:
          $ref: '#/components/responses/requestResponseOk'
        404:
          $ref: '#/components/responses/missingRequestedItem'
    delete:
      tags:
        - GestoreRequest
      operationId: deleteRequest
      responses:
        200:
          description: OK
        404:
          $ref: '#/components/responses/missingRequestedItem'
    patch:
      tags:
        - GestoreRequest
      operationId: patchRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDto'
        required: true
      responses:
        200:
          $ref: '#/components/responses/requestResponseOk'
        404:
          $ref: '#/components/responses/missingRequestedItem'

  /external-channel/gestoreRepository/requests:
    post:
      tags:
        - GestoreRequest
      operationId: insertRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestDto'
        required: true
      responses:
        200:
          $ref: '#/components/responses/requestResponseOk'
        409:
          $ref: '#/components/responses/requestedItemAlreadyExist'
        204:
          description: Richiesta con lo stesso hash già presente a sistema
          content:
            application/json:
              schema:
                $ref: '../../external/schemas-pn-errors-v1.yaml#/components/schemas/Problem'

  /external-channel/gestoreRepository/requests/messageId/{messageId}:
    parameters:
      - name: messageId
        in: path
        required: true
        allowEmptyValue: false
        schema:
          type: string
    get:
      tags:
        - GestoreRequest
      operationId: getRequestByMessageId
      description: Recupero di una richiesta tramite l'identificativo del messaggio
      responses:
        200:
          $ref: '#/components/responses/requestResponseOk'
        404:
          $ref: '#/components/responses/missingRequestedItem'
        400:
          description: Decoding messageId error
          content:
            application/json:
              schema:
                $ref: '../../external/schemas-pn-errors-v1.yaml#/components/schemas/Problem'

  /external-channel/gestoreRepository/requests/messageId/{requestIdx}:
    parameters:
      - name: x-pagopa-extch-cx-id
        in: header
        required: true
        allowEmptyValue: false
        schema:
          type: string
      - name: requestIdx
        in: path
        required: true
        allowEmptyValue: false
        schema:
          type: string
    post:
      tags:
        - GestoreRequest
      operationId: setMessageIdInRequestMetadata
      description: Chiamata per generare il messageId nei metadata di una richiesta.
        Tramite il path param requestIdx (idRequest) verrà recuperato il xPagopaExtchCxId (idClient)
        e creata una stringa 'base64RequestId~base64ClientId@pagopa.it'.
        Questo valore sarà tornato come response body della chiamata insieme alla richiesta.
      responses:
        200:
          $ref: '#/components/responses/requestResponseOk'
        404:
          $ref: '#/components/responses/missingRequestedItem'
        500:
          description: Encoding messageId error
          content:
            application/json:
              schema:
                $ref: '../../external/schemas-pn-errors-v1.yaml#/components/schemas/Problem'

components:

  responses:

    clientResponseOk:
      description: OK
      content:
        application/json:
          schema:
            title: ClientConfigurationInternalDto
            type: object
            properties:
              xPagopaExtchCxId:
                type: string
                pattern: "^(?!\\s*$).+"
                minLength: 10
                maxLength: 50
              sqsArn:
                type: string
              sqsName:
                type: string
              pecReplyTo:
                type: string
              mailReplyTo:
                type: string
              apiKey:
                type: string
              senderPhysicalAddress:
                $ref: "#/components/schemas/SenderPhysicalAddressDto"
            required:
              - xPagopaExtchCxId
              - sqsArn
              - sqsName

    requestResponseOk:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestDto'

    requestedItemAlreadyExist:
      description: Risorsa già presente a sistema
      content:
        application/json:
          schema:
            $ref: '../../external/schemas-pn-errors-v1.yaml#/components/schemas/Problem'

    missingRequestedItem:
      description: Risorsa non presente a sistema
      content:
        application/json:
          schema:
            $ref: '../../external/schemas-pn-errors-v1.yaml#/components/schemas/Problem'


  schemas:

    #############################################################################################
    ###                     SCHEMI PER GESTIONI RICHIESTE                     ###
    #############################################################################################

    RequestDto:
      type: object
      required:
        - requestIdx
        - xPagopaExtchCxId
        - clientRequestTimeStamp
        - requestPersonal
        - requestMetadata
      properties:
        requestIdx:
          type: string
          minLength: 5
          maxLength: 100
        messageId:
          type: string
          readOnly: true
        xPagopaExtchCxId:
          type: string
        statusRequest:
          type: string
          readOnly: true
        clientRequestTimeStamp:
          type: string
          format: date-time
        requestTimeStamp:
          type: string
          format: date-time
          readOnly: true
        requestPersonal:
          $ref: '#/components/schemas/RequestPersonalDto'
        requestMetadata:
          $ref: '#/components/schemas/RequestMetadataDto'

    RequestPersonalDto:
      type: object
      properties:
        digitalRequestPersonal:
          $ref: './schemas/internal-schemas-digital-v1.yaml#/components/schemas/DigitalRequestPersonalDto'
        paperRequestPersonal:
          $ref: './schemas/internal-schemas-paper-v1.yaml#/components/schemas/PaperRequestPersonalDto'

    RequestMetadataDto:
      type: object
      properties:
        requestHash:
          type: string
          readOnly: true
        digitalRequestMetadata:
          $ref: './schemas/internal-schemas-digital-v1.yaml#/components/schemas/DigitalRequestMetadataDto'
        paperRequestMetadata:
          $ref: './schemas/internal-schemas-paper-v1.yaml#/components/schemas/PaperRequestMetadataDto'
        eventsList:
          type: array
          items:
            $ref: '#/components/schemas/EventsDto'
        retry:
          $ref: '#/components/schemas/RetryDto'

    PatchDto:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/EventsDto'
        retry:
          $ref: '#/components/schemas/RetryDto'

    EventsDto:
      type: object
      properties:
        digProgrStatus:
          $ref: './schemas/internal-schemas-digital-v1.yaml#/components/schemas/DigitalProgressStatusDto'
        paperProgrStatus:
          $ref: './schemas/internal-schemas-paper-v1.yaml#/components/schemas/PaperProgressStatusDto'

    RetryDto:
      type: object
      required:
        - lastRetryTimestamp
        - retryStep
        - retryPolicy
      properties:
        lastRetryTimestamp:
          type: string
          format: date-time
        retryStep:
          type: number
          example: '1-n'
        retryPolicy:
          type: array
          items:
            type: number
            description: >-
              come da specifiche di configurazione delle retry policy per la sola parte di interesse del canale
            example: '"SMS":[5,10,20,40],"EMAIL":[5,10,20,40],"PEC":[5,10,20,40],"PAPER":[5,10,20,40]'